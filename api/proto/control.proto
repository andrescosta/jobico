syntax = "proto3";

option go_package = "/types";

import "common.proto";

service Control {
  /*rpc GetEvents (GetEventRequest) returns (GetEventReply) {}
  rpc AddEvents (AddEventRequest) returns (AddEventReply) {}
  rpc AddExecutor (AddExecutorRequest) returns (AddExecutorReply) {}
  rpc GetExecutors (GetExecutorsRequest) returns (GetExecutorsReply) {}
  */
  rpc GetQueues(GetQueuesDefRequest) returns (GetQueuesDefReply){}
  rpc AddQueues(AddQueueDefRequest) returns (AddQueueDefReply){}
}

message GetQueuesDefRequest {
  optional QueueId queueId = 1;
  optional MerchantId merchantId=2;

}

message GetQueuesDefReply {
  repeated QueueDef queues = 1;
}

message AddQueueDefRequest {
  QueueDef queues = 1;
}

message AddQueueDefReply {
  QueueDef queues = 1;  
}

message QueueDef {
  string ID  = 1; 
  QueueId queueId = 2;
  MerchantId merchantId=3;
  Executor executor=4;
}

message Executor {
  string id = 1;
  string type = 2;
  string script = 3;
}


message Event {
  string id = 1;
  string schema = 2;
}

message ExecutorDefinition {
  Event event = 1;
  string package = 2;
}

message GetEventRequest {
	repeated Event events = 1;
}
  
message GetEventReply {
	repeated Event events = 1;
}

message AddEventRequest {
	repeated Event event = 1;
}
  
message AddEventReply {
}

message AddExecutorRequest {
	repeated ExecutorDefinition definition = 1;
}
  
message AddExecutorReply {
}

message GetExecutorsRequest {
	repeated ExecutorDefinition definitions = 1;
}
  
message GetExecutorsReply {
	repeated ExecutorDefinition definitions = 1;
}